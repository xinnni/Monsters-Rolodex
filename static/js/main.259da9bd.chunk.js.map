{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monsters","className","alt","src","id","name","email","phone","CardList","map","SearchBox","handleChange","placeholder","onFocus","e","target","onBlur","type","onChange","App","useState","setMonsters","searchField","setSearchField","filterdMonsters","filter","monster","toLowerCase","includes","useCallback","value","monstersGroup","a","axios","get","then","res","DATA","data","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAIaA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAASI,GAAnC,4BAEL,6BAAKJ,EAASK,OACd,4BAAIL,EAASM,QACb,4BAAIN,EAASO,YCPNC,G,MAAW,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SACzB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAASS,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASI,WCNfM,G,MAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,uBACEC,YAAY,kBACZC,QAAS,SAACC,GAAD,OAAQA,EAAEC,OAAOH,YAAc,IACxCI,OAAQ,SAACF,GAAD,OAAQA,EAAEC,OAAOH,YAAc,mBACvCX,UAAU,SACVgB,KAAK,SACLC,SAAUP,MC6BDQ,MAlCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNpB,EADM,KACIqB,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIPC,EAAkBxB,EAASyB,QAAO,SAACC,GAAD,OACtCA,EAAQrB,KAAKsB,cAAcC,SAASN,EAAYK,kBAG5ChB,EAAekB,uBAAY,SAACf,GAChCS,EAAeT,EAAEC,OAAOe,SACvB,IAEGC,EAAa,uCAAG,sBAAAC,EAAA,sEACdC,IACHC,IAAI,8CACJC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAIE,KACjBjB,EAAYgB,MALI,2CAAH,qDAanB,OAJAE,qBAAU,WACRR,MACC,IAGD,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,gBAAd,8BACA,cAAC,EAAD,CAAWU,aAAcA,IACzB,cAAC,EAAD,CAAUX,SAAUwB,QCxBXgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.259da9bd.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = ({ monsters }) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${monsters.id}?set=set2&size=180x180`}\n      />\n      <h2>{monsters.name}</h2>\n      <p>{monsters.email}</p>\n      <p>{monsters.phone}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = ({ monsters }) => {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monsters) => (\n        <Card key={monsters.id} monsters={monsters} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ handleChange }) => {\n  return (\n    <input\n      placeholder=\"Search Monsters\"\n      onFocus={(e) => (e.target.placeholder = \"\")}\n      onBlur={(e) => (e.target.placeholder = \"Search Monsters\")}\n      className=\"search\"\n      type=\"search\"\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  const filterdMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  const handleChange = useCallback((e) => {\n    setSearchField(e.target.value);\n  }, []);\n\n  const monstersGroup = async () => {\n    await axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => {\n        const DATA = res.data;\n        setMonsters(DATA);\n      });\n  };\n\n  useEffect(() => {\n    monstersGroup();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"monsters-neon\">Monsters Rolodex</h1>\n      <SearchBox handleChange={handleChange} />\n      <CardList monsters={filterdMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}